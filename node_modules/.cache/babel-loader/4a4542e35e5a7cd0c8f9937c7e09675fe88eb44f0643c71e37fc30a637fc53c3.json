{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA\\\\DOCUMENTS\\\\GitHub\\\\React-App-1\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n  let [menuItems, setMenuItems] = useState([]);\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  let [filter, setFilter] = useState(\"\");\n  let addMenuItem = useCallback(() => {\n    setMenuItems([...menuItems, newMenuItem]);\n    console.log(\"Added menu item\");\n    setNewMenuItem(\"\");\n  }, [menuItems, newMenuItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase())).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"iw/ng6kxOwhtv6Ypjnmf+pfhn50=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","menuItems","setMenuItems","newMenuItem","setNewMenuItem","filter","setFilter","addMenuItem","console","log","item","toLowerCase","includes","map","index","event","target","value"],"sources":["D:/DATA/DOCUMENTS/GitHub/React-App-1/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\r\n\r\nexport default function Sidebar() {\r\n  let [menuItems, setMenuItems] = useState([]);\r\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\r\n  let [filter, setFilter] = useState(\"\");\r\n\r\n  let addMenuItem = useCallback(() => {\r\n      setMenuItems([...menuItems, newMenuItem]);\r\n      console.log(\"Added menu item\");\r\n      setNewMenuItem(\"\");\r\n  }, [menuItems, newMenuItem]);\r\n\r\n  return (\r\n    <div>\r\n <ul>\r\n  {menuItems\r\n    .filter((item) => item.toLowerCase().includes(filter.toLowerCase()))\r\n    .map((item, index) => (\r\n      <li key={index}>{item}</li>\r\n    ))}\r\n</ul>\r\n      <input\r\n        type=\"text\"\r\n        id=\"newMenuItemValue\"\r\n        value={newMenuItem}\r\n        onChange={(event) => setNewMenuItem(event.target.value)}\r\n      ></input>\r\n      <br />\r\n      <button\r\n        onClick={addMenuItem}>Add Item\r\n      </button>\r\n      <br />\r\n      <input\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n        placeholder=\"Filter by...\"\r\n      ></input>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAA;AAE7C,eAAe,SAASC,OAAO,GAAG;EAAA;EAChC,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAI,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,IAAIS,WAAW,GAAGR,WAAW,CAAC,MAAM;IAChCG,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEE,WAAW,CAAC,CAAC;IACzCK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BL,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,CAACH,SAAS,EAAEE,WAAW,CAAC,CAAC;EAE5B,oBACE;IAAA,wBACH;MAAA,UACEF,SAAS,CACPI,MAAM,CAAEK,IAAI,IAAKA,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,MAAM,CAACM,WAAW,EAAE,CAAC,CAAC,CACnEE,GAAG,CAAC,CAACH,IAAI,EAAEI,KAAK,kBACf;QAAA,UAAiBJ;MAAI,GAAZI,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACC;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAEX,WAAY;MACnB,QAAQ,EAAGY,KAAK,IAAKX,cAAc,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACjD,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,OAAO,EAAEV,WAAY;MAAA,UAAC;IACxB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGU,KAAK,IAAKT,SAAS,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;MACnD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAxCuBjB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}